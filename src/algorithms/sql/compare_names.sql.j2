CREATE MACRO IF NOT EXISTS normalize_name(text) AS 
TRIM(
    REGEXP_REPLACE(
        REGEXP_REPLACE(
            REGEXP_REPLACE(
                LOWER(strip_accents(text)
                ),
                '[^a-z\s]', '-', 'g'
            ),
            '[\s\-]+', '-', 'g'
        ),
        '^-+|-+$', '', 'g'
    ), 
    '-'
);

WITH input_data AS(
    SELECT 
        input_data.{{ comparison_first_name }} AS comparison_first_name,
        input_data.{{ comparison_family_name }} AS comparison_family_name,
        normalize_name(
            input_data.{{ comparison_first_name }} ||'-'|| input_data.{{ comparison_family_name }}
            ) AS normalized_name
    FROM {{ data_for_comparison }} input_data
)
SELECT 
    data_source.id AS id,
    data_source.first_name AS first_name,
    data_source.family_name AS last_name,
    input_data.comparison_first_name,
    input_data.comparison_family_name,
    jaro_winkler_similarity(
        data_source.name_for_comparison,
        input_data.normalized_name
    ) AS jaro_winkler_similarity_score,
    levenshtein(
        data_source.name_for_comparison, 
        input_data.normalized_name
    ) AS levenshtein_similarity_score
FROM 
    {{ data_source }} data_source
CROSS JOIN 
    input_data
WHERE 
    jaro_winkler_similarity(
        data_source.name_for_comparison,  
        input_data.normalized_name
    ) > {{ threshold }}
ORDER BY 
    jaro_winkler_similarity_score DESC
LIMIT 50000